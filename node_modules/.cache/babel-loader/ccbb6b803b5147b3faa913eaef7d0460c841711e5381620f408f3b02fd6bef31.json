{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const cartSlice = createSlice({\n  name: \"cart\",\n  initialState: [],\n  reducers: {\n    add: (state, action) => {\n      state.push(action.payload); // action payload represents the argument that has been passed\n    },\n\n    remove: (state, action) => {\n      return state.filter(item => item.id !== action.payload);\n    }\n  }\n});\nexport const {\n  add,\n  remove\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","reducers","add","state","action","push","payload","remove","filter","item","id","actions","reducer"],"sources":["/Users/krishagarg/Desktop/myWork/ReactJS/shopping-redux/src/redux/slices/cartSlice.js"],"sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\"\n\nexport const cartSlice = createSlice({\n        name:\"cart\",\n        initialState:[],\n        reducers:{\n                add:(state,action) => {\n                        state.push(action.payload); // action payload represents the argument that has been passed\n                },\n                remove:(state,action) => {\n                        return state.filter((item) => item.id !== action.payload);\n                }\n        }\n});\n \nexport const {add,remove} = cartSlice.actions;\nexport default cartSlice.reducer;"],"mappings":"AAAA,SAAQA,WAAW,QAAO,kBAAkB;AAE5C,OAAO,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC7BE,IAAI,EAAC,MAAM;EACXC,YAAY,EAAC,EAAE;EACfC,QAAQ,EAAC;IACDC,GAAG,EAACA,CAACC,KAAK,EAACC,MAAM,KAAK;MACdD,KAAK,CAACE,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC,CAAC,CAAC;IACpC,CAAC;;IACDC,MAAM,EAACA,CAACJ,KAAK,EAACC,MAAM,KAAK;MACjB,OAAOD,KAAK,CAACK,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKN,MAAM,CAACE,OAAO,CAAC;IACjE;EACR;AACR,CAAC,CAAC;AAEF,OAAO,MAAM;EAACJ,GAAG;EAACK;AAAM,CAAC,GAAGT,SAAS,CAACa,OAAO;AAC7C,eAAeb,SAAS,CAACc,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}